apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'maven'

description = 'Message web application'

group = 'org.springframework.security'
version = '1.0.0.BUILD-SNAPSHOT'

sourceCompatibility=1.6
targetCompatibility=1.6

[compileJava, compileTestJava]*.options*.compilerArgs = ['-Xlint:none']

sourceSets.test.resources.srcDirs = ['src/test/resources', 'src/test/java']

test.systemProperty("java.awt.headless", "true")

repositories {
    mavenCentral()
    maven { url "http://repo.springsource.org/libs-milestone" }
}

ext.springVersion = '3.1.2.RELEASE'
ext.springSecurityVersion = '3.1.2.RELEASE'

// servlet-api (2.5) and tomcat-servlet-api (3.0) classpath entries should not be
// exported to dependent projects in Eclipse to avoid false compilation errors due
// to changing APIs across these versions
eclipse {
    classpath {
        downloadSources = true
        file.whenMerged { classpath ->
            //classpath.entries.findAll { entry -> entry.path.contains('servlet-api') }*.exported = false
        }
    }
}


configurations.all {
  resolutionStrategy {
    ['aop','asm','context','context-support','core','beans','expression','jdbc','orm','tx','web','webmvc'].each { force "org.springframework:spring-$it:$springVersion" }
  }
}


dependencies {
    compile "org.springframework:spring-context:$springVersion",
             "org.springframework:spring-webmvc:$springVersion",
             "org.springframework.data:spring-data-jpa:1.2.0.RC1",
             "org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.0.Final",
             "org.hibernate:hibernate-entitymanager:4.1.4.Final",
             "org.hibernate:hibernate-validator:4.1.0.Final",
             "org.aspectj:aspectjrt:1.6.10",
             "javax.validation:validation-api:1.0.0.GA",
             "org.slf4j:slf4j-log4j12:1.6.1",
             "org.hsqldb:hsqldb:2.2.8",
             "javax.servlet:jstl:1.2",
             "org.springframework.security:spring-security-web:$springSecurityVersion",
             "org.springframework.security:spring-security-config:$springSecurityVersion",
             "org.springframework.security:spring-security-core:$springSecurityVersion",
             "org.springframework.security:spring-security-taglibs:$springSecurityVersion"
     testCompile "junit:junit:4.10",
             "org.easytesting:fest-assert:1.4"

}

task generatePom {
    group = 'Build'
    description = 'Generates a Maven pom.xml'

    ext.generatedPomFileName = "pom.xml"

    inputs.files(file("$rootDir/build.gradle"))
    outputs.files(generatedPomFileName)

    doLast() {
        def p = pom {
            project {
                name = project.description
                properties {
                    setProperty('project.build.sourceEncoding', 'UTF8')
                    setProperty('spring.version', springVersion)
                    setProperty('spring.security.version', springSecurityVersion)
                    setProperty('m2eclipse.wtp.contextroot', 'calendar')
                }
                inceptionYear '2012'
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
                scm {
                    url = 'https://github.com/rwinch/messages'
                    connection = 'scm:git:git://github.com/rwinch/messages'
                    developerConnection = 'scm:git:git://github.com/rwinch/messages'
                }
                developers {
                    developer {
                        id = 'rwinch'
                        name = 'Rob Winch'
                        email = 'rwinch@vmware.com'
                    }
                }
                build {
                    resources {
                        resource {
                            directory = '${basedir}/src/main/resources'
                            filtering = 'true'
                        }
                    }
                    plugins {
                        plugin {
                            groupId = 'org.apache.maven.plugins'
                            artifactId = 'maven-compiler-plugin'
                            configuration {
                                source = '1.6'
                                target = '1.6'
                            }
                        }
                    }
                }
            }
        }
        p.whenConfigured { pom ->
            pom.dependencies = pom.dependencies.sort {it.groupId + it.artifactId }
            pom.dependencies.each {
                if(it.groupId == 'org.springframework') {
                    it.version = '${spring.version}'
                }
                if(it.groupId == 'org.springframework.security') {
                    it.version = '${spring.security.version}'
                }
            }
        }
        p.writeTo(generatedPomFileName)
    }
}

build.dependsOn generatePom